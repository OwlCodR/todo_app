import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:todo_app/models/data/remote/element_response.dart';
import 'package:todo_app/utils/importance_enum.dart';

import '../data/local/task_hive.dart';

part 'task_model.freezed.dart'; // Associates our class with the code generated by Freezed
part 'task_model.g.dart'; // Makes class serializable

@freezed
class TaskModel with _$TaskModel {
  factory TaskModel({
    required String id,
    required bool isDone,
    required String title,
    required Importance importance,
    required int createdAt,
    required int changedAt,
    required String lastUpdatedBy,
    int? deadlineTime,
    String? color,
  }) = _TaskModel;

  factory TaskModel.fromJson(Map<String, Object?> json) =>
      _$TaskModelFromJson(json);

  factory TaskModel.fromHive(TaskHive task) {
    return TaskModel(
      id: task.id,
      isDone: task.isDone,
      title: task.title,
      importance: Importance.fromString(task.importance),
      createdAt: task.createdAt,
      changedAt: task.changedAt,
      lastUpdatedBy: task.lastUpdatedBy,
      deadlineTime: task.deadlineTime,
      color: task.color,
    );
  }

  factory TaskModel.fromResponse(ElementResponse task) {
    return TaskModel(
      id: task.id,
      isDone: task.isDone,
      title: task.title,
      importance: Importance.fromString(task.importance),
      createdAt: task.createdAt,
      changedAt: task.changedAt,
      lastUpdatedBy: task.lastUpdatedBy,
      deadlineTime: task.deadlineTime,
      color: task.color,
    );
  }
}
