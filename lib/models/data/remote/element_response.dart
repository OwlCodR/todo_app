import 'package:freezed_annotation/freezed_annotation.dart';

import '../../domain/task_model.dart';

part 'element_response.freezed.dart'; // Associates our class with the code generated by Freezed
part 'element_response.g.dart'; // Makes class serializable

@freezed
class ElementResponse with _$ElementResponse {
  factory ElementResponse({
    @JsonKey(name: 'id') required String id,
    @JsonKey(name: 'done') required bool isDone,
    @JsonKey(name: 'text') required String title,
    @JsonKey(name: 'importance') required String importance,
    @JsonKey(name: 'created_at') required int createdAt,
    @JsonKey(name: 'changed_at') required int changedAt,
    @JsonKey(name: 'last_updated_by') required String lastUpdatedBy,
    @JsonKey(name: 'deadline') int? deadlineTime,
    @JsonKey(name: 'color') String? color,
  }) = _ElementResponse;

  factory ElementResponse.fromJson(Map<String, Object?> json) =>
      _$ElementResponseFromJson(json);

  factory ElementResponse.fromModel(TaskModel task) {
    return ElementResponse(
      id: task.id,
      isDone: task.isDone,
      title: task.title,
      importance: task.importance.string,
      createdAt: task.createdAt,
      changedAt: task.changedAt,
      lastUpdatedBy: task.lastUpdatedBy,
      deadlineTime: task.deadlineTime,
      color: task.color,
    );
  }
}
